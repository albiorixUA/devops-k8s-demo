#!/bin/bash

reject_commit() {
    echo "Error: Secrets detected in the code. Commit rejected."
    exit 1
}

install_gitleaks() {
    if ! command -v gitleaks &> /dev/null; then
        echo "gitleaks not found. Installing..."
        
        if [[ "$OSTYPE" == "linux-gnu"* ]]; then
            # Linux
            curl -sSfL https://raw.githubusercontent.com/zricethezav/gitleaks/master/scripts/install.sh | sudo bash -s -- -b /usr/local/bin
        elif [[ "$OSTYPE" == "darwin"* ]]; then
            # macOS
            brew install gitleaks
        elif command -v choco &> /dev/null; then
            # Windows using chocolatey
            choco install gitleaks
        elif command -v powershell &> /dev/null; then
            # Windows without chocolatey, use PowerShell

            # Make folder to be added to path
            powershell -Command "& { mkdir \"$HOME\\bin\" }"

            # Download latest gitleaks to folder
            powershell -Command "& { Invoke-WebRequest https://github.com/zricethezav/gitleaks/releases/latest/download/gitleaks-windows-amd64.exe -OutFile \"$HOME\\bin\\gitleaks.exe\" }"

            # Set path for current shell
            powershell -Command "& { $env:PATH += \";$HOME/bin\" }"

            # Permanently set the PATH
            # Get User's current path value
            USER_PATH=[Environment]::GetEnvironmentVariable("Path", [System.EnvironmentVariableTarget]::User)

            # Add folder to User's path
            [Environment]::SetEnvironmentVariable("Path", $USER_PATH + ";$HOME\\bin", [System.EnvironmentVariableTarget]::User)

            echo "gitleaks installed successfully."
        else
            echo "Unsupported operating system. Please install gitleaks manually."
            exit 1
        fi
    fi
}

install_gitleaks

if [[ "$(git config --get hooks.gitleaks.enable)" != "true" ]]; then
    git config hooks.gitleaks.enable true
    echo "GitLeaks enabled."
fi

gitleaks --path=. || reject_commit

exit 0
